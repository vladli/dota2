query GetPlayerBySteamId($steamAccountId: Long!) {
  player(steamAccountId: $steamAccountId) {
    steamAccountId
    steamAccount {
      profileUri
      timeCreated
      name
      avatar
      isDotaPlusSubscriber
      seasonRank
      seasonLeaderboardRank
      proSteamAccount {
        id
        name
        realName
        team {
          id
          name
          tag
        }
      }
    }
    matchCount
    winCount
    matches(request: { take: 5 }) {
      id
    }
  }
}

query GetPlayerMatches($steamAccountId: Long!, $take: Int!, $skip: Int) {
  player(steamAccountId: $steamAccountId) {
    matches(request: { take: $take, skip: $skip }) {
      id
      didRadiantWin
      durationSeconds
      endDateTime
      lobbyType
      gameMode
      actualRank
      bottomLaneOutcome
      midLaneOutcome
      topLaneOutcome
      players(steamAccountId: $steamAccountId) {
        hero {
          id
          shortName
          displayName
        }
        isVictory
        kills
        deaths
        assists
        lane
        role
        partyId
        level
      }
    }
  }
}

query GetMostPlayedHeroes(
  $steamAccountId: Long!
  $take: Int!
  $gameVersionId: Short!
) {
  player(steamAccountId: $steamAccountId) {
    steamAccountId
    matchCount
    heroesGroupBy: matchesGroupBy(
      request: { playerList: SINGLE, groupBy: HERO, take: $take }
    ) {
      ... on MatchGroupByHeroType {
        heroId
        hero(gameVersionId: $gameVersionId) {
          displayName
          shortName
        }
        winCount
        matchCount
        avgKills
        avgDeaths
        avgAssists
        lastMatchDateTime
      }
    }
  }
}
