fragment SteamAccountFragment on SteamAccountType {
  id
  name
  seasonRank
  isAnonymous
  isStratzPublic
  proSteamAccount {
    ...ProSteamAccountFragment
  }
}
fragment ProSteamAccountFragment on ProSteamAccountType {
  id
  name
  realName
  isLocked
  isPro
  totalEarnings
  team {
    id
    name
    tag
  }
}

fragment InventoryReportItemFragment on MatchPlayerInventoryObjectType {
  itemId
  charges
}

fragment AbilityFragment on PlayerAbilityType {
  abilityId
  time
  level
  isTalent
  abilityType {
    id
    name
    language {
      displayName
    }
  }
}

query GetMatchById($id: Long!) {
  match(id: $id) {
    id
    didRadiantWin
    durationSeconds
    startDateTime
    endDateTime
    towerStatusRadiant
    towerStatusDire
    barracksStatusRadiant
    barracksStatusDire
    lobbyType
    gameMode
    isStats
    gameVersionId
    regionId
    parsedDateTime
    rank
    bracket
    bottomLaneOutcome
    midLaneOutcome
    topLaneOutcome
    radiantKills
    direKills
    radiantNetworthLeads
    radiantExperienceLeads
    towerDeaths {
      time
      npcId
      isRadiant
      attacker
    }
    pickBans {
      isPick
      heroId
      bannedHeroId
      isRadiant
      playerIndex
      wasBannedSuccessfully
    }
    players {
      matchId
      playerSlot
      steamAccountId
      steamAccount {
        ...SteamAccountFragment
      }

      isRadiant
      isVictory
      heroId
      hero {
        shortName
        displayName
      }
      abilities {
        ...AbilityFragment
      }
      stats {
        allTalks {
          time
          message
          pausedTick
        }

        itemPurchases {
          time
          itemId
        }
        inventoryReport {
          item0 {
            ...InventoryReportItemFragment
          }
          item1 {
            ...InventoryReportItemFragment
          }
          item2 {
            ...InventoryReportItemFragment
          }
          item3 {
            ...InventoryReportItemFragment
          }
          item4 {
            ...InventoryReportItemFragment
          }
          item5 {
            ...InventoryReportItemFragment
          }
          backPack0 {
            ...InventoryReportItemFragment
          }
          backPack1 {
            ...InventoryReportItemFragment
          }
          backPack2 {
            ...InventoryReportItemFragment
          }
          neutral0 {
            ...InventoryReportItemFragment
          }
        }
        killEvents {
          time
          target
        }
        deathEvents {
          time
          attacker
          target
          timeDead
          goldLost
        }
        assistEvents {
          time
          target
        }
        level
        lastHitsPerMinute
        deniesPerMinute
        goldPerMinute
        experiencePerMinute
        healPerMinute
        heroDamagePerMinute
        heroDamageReceivedPerMinute
        towerDamagePerMinute
        networthPerMinute
        campStack
        matchPlayerBuffEvent {
          time
          abilityId
          itemId
          stackCount
        }
        runes {
          time
          rune
          action
        }
      }
      gameVersionId
      kills
      deaths
      assists
      leaverStatus
      numLastHits
      numDenies
      goldPerMinute
      networth
      experiencePerMinute
      level
      gold
      goldSpent
      heroDamage
      towerDamage
      heroHealing
      partyId
      isRandom
      lane
      position
      streakPrediction
      intentionalFeeding
      role
      roleBasic
      item0Id
      item1Id
      item2Id
      item3Id
      item4Id
      item5Id
      backpack0Id
      backpack1Id
      backpack2Id
      neutral0Id
      behavior
      invisibleSeconds
      dotaPlusHeroXp
    }
  }
}

query GetMatchLanes($id: Long!) {
  match(id: $id) {
    id
    statsDateTime
    endDateTime
    players {
      position
      lane
      role
      isRadiant
      isRandom
      heroId
      hero {
        displayName
        shortName
      }
      steamAccountId
      steamAccount {
        ...SteamAccountFragment
      }
      stats {
        level
        killEvents {
          time
          target
        }
        deathEvents {
          time
        }
        assistEvents {
          time
          target
        }
        experiencePerMinute
        lastHitsPerMinute
        deniesPerMinute
        networthPerMinute
        heroDamagePerMinute
        towerDamagePerMinute
        healPerMinute
        itemPurchases {
          time
          itemId
        }
        tripsFountainPerMinute
        campStack
        wards {
          time
          type
        }
      }
    }
  }
}
